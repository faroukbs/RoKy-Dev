<?php

namespace Proxies\__CG__\App\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Utilisateurs extends \App\Entity\Utilisateurs implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Utilisateurs' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Utilisateurs' . "\0" . 'Nom', '' . "\0" . 'App\\Entity\\Utilisateurs' . "\0" . 'Prenom', '' . "\0" . 'App\\Entity\\Utilisateurs' . "\0" . 'Email', '' . "\0" . 'App\\Entity\\Utilisateurs' . "\0" . 'Telephone', '' . "\0" . 'App\\Entity\\Utilisateurs' . "\0" . 'Password', '' . "\0" . 'App\\Entity\\Utilisateurs' . "\0" . 'ConfirmPassword', '' . "\0" . 'App\\Entity\\Utilisateurs' . "\0" . 'Role', '' . "\0" . 'App\\Entity\\Utilisateurs' . "\0" . 'Token', '' . "\0" . 'App\\Entity\\Utilisateurs' . "\0" . 'reclamations'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Utilisateurs' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Utilisateurs' . "\0" . 'Nom', '' . "\0" . 'App\\Entity\\Utilisateurs' . "\0" . 'Prenom', '' . "\0" . 'App\\Entity\\Utilisateurs' . "\0" . 'Email', '' . "\0" . 'App\\Entity\\Utilisateurs' . "\0" . 'Telephone', '' . "\0" . 'App\\Entity\\Utilisateurs' . "\0" . 'Password', '' . "\0" . 'App\\Entity\\Utilisateurs' . "\0" . 'ConfirmPassword', '' . "\0" . 'App\\Entity\\Utilisateurs' . "\0" . 'Role', '' . "\0" . 'App\\Entity\\Utilisateurs' . "\0" . 'Token', '' . "\0" . 'App\\Entity\\Utilisateurs' . "\0" . 'reclamations'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Utilisateurs $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getNom(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNom', []);

        return parent::getNom();
    }

    /**
     * {@inheritDoc}
     */
    public function setNom(string $Nom): \App\Entity\Utilisateurs
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNom', [$Nom]);

        return parent::setNom($Nom);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrenom(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrenom', []);

        return parent::getPrenom();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrenom(string $Prenom): \App\Entity\Utilisateurs
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrenom', [$Prenom]);

        return parent::setPrenom($Prenom);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail(string $Email): \App\Entity\Utilisateurs
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$Email]);

        return parent::setEmail($Email);
    }

    /**
     * {@inheritDoc}
     */
    public function getTelephone(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTelephone', []);

        return parent::getTelephone();
    }

    /**
     * {@inheritDoc}
     */
    public function setTelephone(string $Telephone): \App\Entity\Utilisateurs
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTelephone', [$Telephone]);

        return parent::setTelephone($Telephone);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', []);

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword(string $Password): \App\Entity\Utilisateurs
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', [$Password]);

        return parent::setPassword($Password);
    }

    /**
     * {@inheritDoc}
     */
    public function getConfirmPassword(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConfirmPassword', []);

        return parent::getConfirmPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setConfirmPassword(string $ConfirmPassword): \App\Entity\Utilisateurs
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConfirmPassword', [$ConfirmPassword]);

        return parent::setConfirmPassword($ConfirmPassword);
    }

    /**
     * {@inheritDoc}
     */
    public function getRole(): array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRole', []);

        return parent::getRole();
    }

    /**
     * {@inheritDoc}
     */
    public function setRole(array $roles): \App\Entity\Utilisateurs
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRole', [$roles]);

        return parent::setRole($roles);
    }

    /**
     * {@inheritDoc}
     */
    public function getToken(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getToken', []);

        return parent::getToken();
    }

    /**
     * {@inheritDoc}
     */
    public function setToken(?string $Token): \App\Entity\Utilisateurs
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setToken', [$Token]);

        return parent::setToken($Token);
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles(): array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', []);

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', []);

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function eraseCredentials()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'eraseCredentials', []);

        return parent::eraseCredentials();
    }

    /**
     * {@inheritDoc}
     */
    public function getSalt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalt', []);

        return parent::getSalt();
    }

    /**
     * {@inheritDoc}
     */
    public function getReclamations(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReclamations', []);

        return parent::getReclamations();
    }

    /**
     * {@inheritDoc}
     */
    public function addReclamation(\App\Entity\Reclamation $reclamation): \App\Entity\Utilisateurs
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addReclamation', [$reclamation]);

        return parent::addReclamation($reclamation);
    }

    /**
     * {@inheritDoc}
     */
    public function removeReclamation(\App\Entity\Reclamation $reclamation): \App\Entity\Utilisateurs
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeReclamation', [$reclamation]);

        return parent::removeReclamation($reclamation);
    }

}
